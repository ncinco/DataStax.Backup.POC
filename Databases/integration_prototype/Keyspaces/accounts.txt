CREATE KEYSPACE accounts WITH replication = {'class': 'NetworkTopologyStrategy', 'australiaeast': '3'}  AND durable_writes = true;

CREATE TYPE accounts.relationship_info (
    tokenised_cif uuid,
    cif_number text,
    link_type text
);

CREATE TABLE accounts.bank_account_relationship_by_account_number (
    tokenised_cif uuid PRIMARY KEY,
    account_number text,
    link_type text
) WITH additional_write_policy = '99PERCENTILE'
    AND bloom_filter_fp_chance = 0.01
    AND caching = {'keys': 'ALL', 'rows_per_partition': 'NONE'}
    AND comment = ''
    AND compaction = {'class': 'org.apache.cassandra.db.compaction.UnifiedCompactionStrategy'}
    AND compression = {'chunk_length_in_kb': '64', 'class': 'org.apache.cassandra.io.compress.LZ4Compressor'}
    AND crc_check_chance = 1.0
    AND default_time_to_live = 0
    AND gc_grace_seconds = 864000
    AND max_index_interval = 2048
    AND memtable_flush_period_in_ms = 0
    AND min_index_interval = 128
    AND read_repair = 'BLOCKING'
    AND speculative_retry = '99PERCENTILE';
CREATE CUSTOM INDEX account_number_idx ON accounts.bank_account_relationship_by_account_number (account_number) USING 'StorageAttachedIndex';

CREATE TABLE accounts.bank_accounts_by_cif (
    tokenised_cif uuid,
    account_type text,
    account_balance decimal,
    account_branch text,
    account_closure_datetime timestamp,
    account_hold_flag smallint,
    account_name text,
    account_number text,
    account_open_datetime timestamp,
    available_balance decimal,
    currency text,
    product_name text,
    product_number uuid,
    PRIMARY KEY (tokenised_cif, account_type)
) WITH CLUSTERING ORDER BY (account_type ASC)
    AND additional_write_policy = '99PERCENTILE'
    AND bloom_filter_fp_chance = 0.01
    AND caching = {'keys': 'ALL', 'rows_per_partition': 'NONE'}
    AND comment = ''
    AND compaction = {'class': 'org.apache.cassandra.db.compaction.UnifiedCompactionStrategy'}
    AND compression = {'chunk_length_in_kb': '64', 'class': 'org.apache.cassandra.io.compress.LZ4Compressor'}
    AND crc_check_chance = 1.0
    AND default_time_to_live = 0
    AND gc_grace_seconds = 864000
    AND max_index_interval = 2048
    AND memtable_flush_period_in_ms = 0
    AND min_index_interval = 128
    AND read_repair = 'BLOCKING'
    AND speculative_retry = '99PERCENTILE';

CREATE TABLE accounts.bank_accounts_by_cif_with_relationship_map (
    account_number text,
    account_type text,
    account_balance decimal,
    account_branch text,
    account_closure_datetime timestamp,
    account_hold_flag boolean,
    account_name text,
    account_number_tokenised uuid,
    account_open_datetime timestamp,
    available_balance decimal,
    currency text,
    product_name text,
    product_number uuid,
    relationships map<uuid, frozen<relationship_info>>,
    PRIMARY KEY (account_number, account_type)
) WITH CLUSTERING ORDER BY (account_type ASC)
    AND additional_write_policy = '99PERCENTILE'
    AND bloom_filter_fp_chance = 0.01
    AND caching = {'keys': 'ALL', 'rows_per_partition': 'NONE'}
    AND comment = ''
    AND compaction = {'class': 'org.apache.cassandra.db.compaction.UnifiedCompactionStrategy'}
    AND compression = {'chunk_length_in_kb': '64', 'class': 'org.apache.cassandra.io.compress.LZ4Compressor'}
    AND crc_check_chance = 1.0
    AND default_time_to_live = 0
    AND gc_grace_seconds = 864000
    AND max_index_interval = 2048
    AND memtable_flush_period_in_ms = 0
    AND min_index_interval = 128
    AND read_repair = 'BLOCKING'
    AND speculative_retry = '99PERCENTILE';
CREATE CUSTOM INDEX relationships_idx ON accounts.bank_accounts_by_cif_with_relationship_map (keys(relationships)) USING 'StorageAttachedIndex';

CREATE TABLE accounts.employees (
    id uuid PRIMARY KEY,
    citizenships set<text>,
    first_name text,
    last_name text
) WITH additional_write_policy = '99PERCENTILE'
    AND bloom_filter_fp_chance = 0.01
    AND caching = {'keys': 'ALL', 'rows_per_partition': 'NONE'}
    AND comment = ''
    AND compaction = {'class': 'org.apache.cassandra.db.compaction.UnifiedCompactionStrategy'}
    AND compression = {'chunk_length_in_kb': '64', 'class': 'org.apache.cassandra.io.compress.LZ4Compressor'}
    AND crc_check_chance = 1.0
    AND default_time_to_live = 0
    AND gc_grace_seconds = 864000
    AND max_index_interval = 2048
    AND memtable_flush_period_in_ms = 0
    AND min_index_interval = 128
    AND read_repair = 'BLOCKING'
    AND speculative_retry = '99PERCENTILE';
CREATE CUSTOM INDEX employees_idx ON accounts.employees (values(citizenships)) USING 'StorageAttachedIndex';

CREATE TABLE accounts.ninotable (
    id uuid PRIMARY KEY,
    first_name text,
    last_name text
) WITH additional_write_policy = '99PERCENTILE'
    AND bloom_filter_fp_chance = 0.01
    AND caching = {'keys': 'ALL', 'rows_per_partition': 'NONE'}
    AND comment = ''
    AND compaction = {'class': 'org.apache.cassandra.db.compaction.UnifiedCompactionStrategy'}
    AND compression = {'chunk_length_in_kb': '64', 'class': 'org.apache.cassandra.io.compress.LZ4Compressor'}
    AND crc_check_chance = 1.0
    AND default_time_to_live = 0
    AND gc_grace_seconds = 864000
    AND max_index_interval = 2048
    AND memtable_flush_period_in_ms = 0
    AND min_index_interval = 128
    AND read_repair = 'BLOCKING'
    AND speculative_retry = '99PERCENTILE';